13/8/2025

console.log()  to pront

//  --single line comment

/*   */ --- multi line comment

## variables

    var  --it can be re-declear and update values
    let  --it can't be re-declear but can be update values
    const -- can't be re-declear and update

## Data types

    primitive data types
        String,number-[integer,float],boolean,null,undefinned
    referance data types
        Object,Array,Functions

14/8/2025
## operators

    Arithematic
    Assignement
    Comparison=[
        Relational
        equality
        string comparison
    ]
    ternary = (condition)? trueblock :False block;

18/8/2025

    logical =   AND &&    OR ||     NOT !

        AND= t,t=t
            t,f=f
            f,t=f
            f,f=f
        or =t,t=t
            t,f=t 
            f,t=t 
            f,f=f 
        NOT 
            t=f
            f=t

    


##falesy values
        null,undefined,Nan,0,false
##truthy values
        except falsy values
##bitwise
        to find binary values

            values=128   64    32  16    8    4    2   1

            1      = 0   0      0   0     0     0   0   1
            2       =0    0     0   0       0   0   1   0
            |       =                       0     0    1    1
                                    ans=3
                &   =                       0   0   0   0
                                        ans=0   

## conditional statememts
    if(condition){
        //code
    }

    if(condition){
        //code
    }
    else if (condition){

    }else{

    }


    if(condition){
        //code
    }
    else{

    }


    nested if

    if(){
        if(){
            if(){

            }
        }else{

        }
    }else{

    }

## looping statements

    ##while loop

    while(){

    }

    ##for loop

    for(start, end ,increment)

    ##do while loop

    do{

    }while( )

    ##forin

        it has an index value 
        best for useing ob

        for( i in variableName){

        }


19/8/2025

    nested for
    nested while

## increment decrement I++,++i,--i,i--

## break,continue
 
21/08/2025

## Function

    to perform a specific task
    reduct re-use of code

    function declaration

        function name(){
            //code
        }

    function Expression

        const variableName=function(){
            //code
        }

    arrow function 

        const variableName=()=> {//code}


## Array []

    used to store any type of values

    Array decleration

    Array decleration

    Array methods
       pop,push,shift,unshift,slice,splice,indexof,reverse,sort

22/08/2025

    array manipulating methods

        map()
            returns the new array 
            does't change orginal arrray 

            map((variableName,index)=>(  // code ))

        reduce()
            
            it returns a new array with single value by accumulating values in array

            reduce((acc,current element,initial value)=>(  // code))
        
        find()

            it find and return the first element which belongs to the give condition
            if not find return undefined
        
        filter()

            it returns the new array which all the elements satisified to the given condition

        findIndex()

            it returns the index of first element which matches the condition

            if not match return -1

        some()

            it returns true at least one element pass the condition

        every()

            it return true if all the element in an array passes the condition

## Object {}

    it is a collection data in key:value sets.
    it can store any type of data in keys and value formate in object

##for in

    loop over the keys /index of an object
    best for object

## for of
    it has no index
    best for Array

## forEach
    breack & continue does't work

## time intervals

    setTimeout()   execute only once

        setTimeout(callback,Delay)

    setIntervales()

        setIntervales(callback,Delay)

##  syn  asyn

25/08/2025

## DOM - Document object module
    
    use DOM 
        create ,delete, update, delete..

    
    DOM tree structure

        Document
                html
                    head
                        title--"content"
                    body
                        p--"content"
                        h1--"content"

    types of node

        element node --<p>
        text node-- "content"
        comment node-- <!--  -->
        attribute node--  <img src="" placholder="">

    Accessing DOM in browser
        // console.log(document.title);

    types of selectors

        id selector
        class selector    
        Element selector
        query selector
        query selector all

## reading & changing content

    innerHTML,innertext,textcontent

##  Reading element attrubute

    getAttribute,setAttrubute,removeAttribute

## changing form 
        input,textcontent,select twgs

26/08/2025

## creating and adding elements

    creating element
        we can create an empty element
        it doesn't appear untill it append

    create text node
        create a text node (only the text not elements)
## Append elements
    append child()
        add the node at the end of the  parent element
        can only append only one node at a time
    append()
        add one or more node elements at a time
        can add multiple items at once
        can uppend both node & string
    prepend()
        add element or text at the begining of the parent node
    insertBefore()
        variableName.insertBefore(new item, element before);
    insertAdjacentHtml()
        variableName.insertAdjacentHtml(position,text)

            beforeBegin--before the element itself
            after begin--insert before the first element
            before end--insert after the last element
            after end--after the element itself
## removing and replaceing elements

    remove child()
        it removes the child node from its parent
        you need both parent node & child node to remove it

    remove()
        directly remove the element itself
    replaceing element()
        it removes the old element and add new element
            variableName.replcechild(old,new)